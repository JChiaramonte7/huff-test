#define macro MAIN() = takes(0) returns(0) {
    0x00 
    calldataload
    0xE0 
    shr // [0xfuncselec]

    dup1 __FUNC_SIG(addTwo) eq addTwoJumpPoint jumpi // dup1 otherwise next line won't have stack value to compare
    dup1 __FUNC_SIG(addThree) eq addThreeJumpPoint jumpi

    stop // halt if no function selector matched

    addTwoJumpPoint:
        ADD_TWO()

    addThreeJumpPoint:
        ADD_THREE()

}

#define function addTwo(uint256,uint256) view returns(uint256)
#define macro ADD_TWO() = takes(0) returns(0) {
    0x04 calldataload // 0x04 to skip prefixed function selector
    0x24 calldataload
    add

    0x00 mstore
    0x20 0x00 return
}

#define function addThree(uint256,uint256,uint256) view returns(uint256)
#define macro ADD_THREE() = takes(0) returns(0) {
    0x04 calldataload // 0x04 to skip prefixed function selector
    0x24 calldataload
    add
    0x44 calldataload
    add

    0x00 mstore
    0x20 0x00 return
}